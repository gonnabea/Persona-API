{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Persona API",
        "description": "Find out how Persona API works",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "146.56.145.39:90",
    "basePath": "/",
    "tags": [
        {
            "name": "Auth",
            "description": "APIs for Authentication in the system"
        },
        {
            "name": "File",
            "description": "APIs for File Download"
        },
        {
            "name": "Verify",
            "description": "APIs for verify"
        }
    ],
    "schemes": ["http", "https"],
    "paths": [],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "in": "headers",
            "name": "authorization"
        }
    },
    "paths": {
        "/auth/sign-in": {
            "post": {
                "summary": "Login user",
                "tags": ["Auth"],
                "description": "Login user in system",
                "parameters": [
                    {
                        "name": "login body",
                        "in": "body",
                        "description": "Login user",
                        "schema": {
                            "$ref": "#/definitions/LoginBody"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/LoginBody"
                        }
                    },
                    "401": {
                        "description": "Login details are not valid!!"
                    },
                    "404": {
                        "description": "Email is not registered!"
                    },
                    "500": {
                        "description": "User login failed!!"
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "summary": "Sign Up",
                "tags": ["Auth"],
                "description": "Create Account for Persona Service",
                "parameters": [
                    {
                        "name": "sign up body",
                        "in": "body",
                        "description": "Login user",
                        "schema": {
                            "$ref": "#/definitions/SignUpBody"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Sign Up Success",
                        "schema": {
                            "$ref": "#/definitions/SignUpBody"
                        }
                    },
                    "401": {
                        "description": "Failed (401)"
                    },
                    "404": {
                        "description": "Failed (404)"
                    },
                    "500": {
                        "description": "Failed (500)"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "summary": "Reset password",
                "tags": ["Auth"],
                "description": "Reset password",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "token",
                        "in": "body",
                        "description": "Verification tokens for reset password",
                        "schema": {
                            "$ref": "#/definitions/resetPasswordBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset password is successfully."
                    },
                    "400": {
                        "description": "Invalid token, New password is incorrect."
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/file/downloadCharacters": {
            "get": {
                "summary": "Download Character Model",
                "tags": ["File"],
                "description": "Download Character by url with file name",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fileName",
                        "type": "string",
                        "description": "Input character model file name with extension (.glb ...) to download",
                        "required": true,
                        "example": "Louise.glb"
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Download Success",
                        "schema": {}
                    },
                    "401": {
                        "description": "Failed (401)"
                    },
                    "404": {
                        "description": "Failed (404)"
                    },
                    "500": {
                        "description": "Failed (500)"
                    }
                }
            }
        },
        "/verify/email": {
            "get": {
                "summary": "Verify email token",
                "tags": ["Verify"],
                "description": "Verify email token and active user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "type": "string",
                        "description": "Tokens for email verification.",
                        "required": true,
                        "example": "123456"
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Email verification is successfully."
                    },
                    "400": {
                        "description": "Failed (400)"
                    },
                    "404": {
                        "description": "Failed (404)"
                    },
                    "500": {
                        "description": "Failed (500)"
                    }
                }
            },
            "post": {
                "summary": "Generate tokens for Email verification",
                "tags": ["Verify"],
                "description": "Generate tokens for Email verification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "email",
                        "type": "string",
                        "description": "Email for generate tokens for email verification.",
                        "required": true,
                        "example": { "email": "email@email.com" }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Generate email verify token is successfully."
                    },
                    "400": {
                        "description": "Failed (400)"
                    },
                    "404": {
                        "description": "Failed (404)"
                    },
                    "500": {
                        "description": "Failed (500)"
                    }
                }
            }
        },
        "/verify/reset-password": {
            "post": {
                "summary": "Generate tokens for Reset password",
                "tags": ["Verify"],
                "description": "Generate tokens for Reset password",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "email",
                        "type": "string",
                        "description": "Email for generate tokens for reset password",
                        "required": true,
                        "example": { "email": "email@email.com" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset password is requested."
                    },
                    "400": {
                        "description": "Token is already exists."
                    },
                    "404": {
                        "description": "Account is not found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        }
    },

    "definitions": {
        "LoginBody": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "SignUpBody": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password2": {
                    "type": "string"
                }
            }
        },
        "resetPasswordBody": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password2": {
                    "type": "string"
                }
            }
        },
        "verifyTokens": {
            "properties": {
                "email": { "type": "string" },
                "token": { "type": "number" }
            }
        }
    }
}
